% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/event_creation.R
\name{seq_bin_events}
\alias{seq_bin_events}
\title{Generate Sequential Bins}
\usage{
seq_bin_events(bin.coverage, bin.count = NULL, bin.length = NULL,
  adaptive = FALSE)
}
\arguments{
\item{bin.coverage}{a bin event table specifying the intervals for sequencing. Gaps in coverage do not count towards bin length.}

\item{bin.count}{number(s) of bins from which \code{bin.length} is set so that they equally divide the coverage.}

\item{bin.length}{length(s) of bins. Ignored if \code{bin.count} is defined. When \code{bin.length} does not evenly divide the coverage, a shorter bin is appended to the end of the sequence.}

\item{adaptive}{if \code{TRUE}, \code{bin.length} is adjusted locally so that a whole number of bins fit within each coverage interval, preserving breaks and gaps.}
}
\value{
An endpoint-only event table with an additional group field if the length of \code{bin.count} or \code{bin.length} is \code{>} 1.
}
\description{
Generates groups of regularly sequenced bins fitted to the specified intervals. Intended for use with \code{\link{sample_events}}.
}
\examples{
e = events(c(0, 20, 40), c(10, 30, 45))
no.gaps = event_range(e)
has.gaps = event_coverage(e)
seq_bin_events(no.gaps, bin.length = 10)                  # unequal length (last is shorter)
seq_bin_events(no.gaps, bin.length = 10, adaptive = TRUE) # equal length (11.25)
seq_bin_events(no.gaps, bin.count = 4)                    # equal length (11.25)
seq_bin_events(has.gaps, bin.count = 4, adaptive = FALSE) # equal coverage (11.25), straddling gaps
seq_bin_events(has.gaps, bin.count = 4, adaptive = TRUE)  # unequal coverage, fitted to gaps
seq_bin_events(no.gaps, bin.count = c(2, 4))              # "group" column added
}
\seealso{
\code{\link{event_range}}, \code{\link{event_coverage}}, and \code{\link{fill_event_gaps}} for building a custom \code{bin.coverage}.
}

